services:
  api:
    container_name: p7-api
    image: api
    build:
      context: .
      dockerfile: API/Dockerfile
    ports:
      - ${API_PORT}:8082
    depends_on:
      db:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      CONNECTIONSTRING: Host=${POSTGRES_HOST};Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};
      MOZART_HASKELL: mozart-haskell:8080
      MOZART_PYTHON: mozart-python:8081
      SEED_ADMIN: true
      ADMIN_MAIL: someEmail@email.dk
      ADMIN_PASS: YourPass!1231

      PERFORMANCE_TEST: false
  db:
    container_name: p7-api-db
    image: postgres:16
    restart: on-failure
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 1s
      retries: 120
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - db:/var/lib/postgresql/data

  mozart-haskell:
    container_name: p7-mozart-haskell
    image: p7project/mozart-haskell:2.0rc2
    restart: on-failure
    ports:
      - 8080:8080
  mozart-python:
    container_name: p7-mozart-python
    image: p7project/mozart-python:2.0rc2
    restart: on-failure
    ports:
      - 8081:8080

volumes:
  db:
